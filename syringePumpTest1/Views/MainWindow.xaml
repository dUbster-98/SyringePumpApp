<Window x:Class="syringePumpTest1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:syringePumpTest1"
        xmlns:behaviors="clr-namespace:SyringePumpTest1.Behaviors"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d"
        Title="Syringe Pump Test" Height="720" Width="1080"
        Background="#F5F5F5"
        WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <LinearGradientBrush x:Key="InRbOver" StartPoint="0.5 0" EndPoint="0.5 1">
            <GradientStop Color="#cbc4ff" Offset="0"/>
            <GradientStop Color="#9182ff" Offset="0.5"/>
            <GradientStop Color="#553efa" Offset="1"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="OutRbOver" StartPoint="0.5 0" EndPoint="0.5 1">
            <GradientStop Color="#ffdab5" Offset="0"/>
            <GradientStop Color="#fcbc7c" Offset="0.5"/>
            <GradientStop Color="#ff9429" Offset="1"/>
        </LinearGradientBrush>

        <Style TargetType="{x:Type Rectangle}" x:Key="RectStyle">
            <Setter Property="StrokeThickness" Value="2"/>
            <Setter Property="Stroke" Value="Black"/>
            <Setter Property="RadiusX" Value="3"/>
            <Setter Property="RadiusY" Value="3"/>
            <Setter Property="Margin" Value="0.5"/>
            <Setter Property="Fill" 
                    Value="{Binding RelativeSource=
                           {RelativeSource Mode=FindAncestor, AncestorLevel=1, 
                            AncestorType={x:Type CheckBox}},Path=IsChecked,
                            Converter={StaticResource BoolToColorConverter}}"/>
        </Style>

        <Style TargetType="{x:Type Path}" x:Key="InArrow">
            <Setter Property="Fill" 
                    Value="{Binding Path=InputStatus, Converter={StaticResource EnumToColorConverter}}"/>
            <Setter Property="Data" Value="M22,4V2H2V4H11V18.17L5.5,12.67L4.08,14.08L12,22L19.92,14.08L18.5,12.67L13,18.17V4H22Z"/>
        </Style>
        <Style TargetType="{x:Type Path}" x:Key="OutArrow">
            <Setter Property="Fill" 
                    Value="{Binding Path=OutputStatus, Converter={StaticResource EnumToColorConverter}}"/>
            <Setter Property="Data" Value="M2,20V22H22V20H13V5.83L18.5,11.33L19.92,9.92L12,2L4.08,9.92L5.5,11.33L11,5.83V20H2Z"/>
        </Style>

        <Style TargetType="{x:Type Path}" x:Key="Cross">
            <Setter Property="Fill" Value="SkyBlue"/>
            <Setter Property="Data" Value="M18 15H15V18H10V15H7V10H10V7H15V10H18"/>
        </Style>

        <Style x:Key="verticalCb" TargetType="{x:Type CheckBox}">
            <Setter Property="Height" Value="68"/>
            <Setter Property="Width" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Rectangle Style="{StaticResource RectStyle}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="HorizontalCb" TargetType="{x:Type CheckBox}">
            <Setter Property="Height" Value="20"/>
            <Setter Property="Width" Value="68"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}"> <!--여기서 타겟 타입이 CheckBox 하위 속성인 ToggleButton으로 바뀌기 때문에 FindAncester를 해줘야 하는것-->
                        <Grid>
                            <Rectangle Style="{StaticResource RectStyle}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="InputRB" TargetType="{x:Type RadioButton}">
            <Setter Property="Width" Value="100"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid>
                            <Path x:Name="path" Style="{StaticResource InArrow}"/>
                            <TextBlock x:Name="tb" Text="Input" HorizontalAlignment="Left"
                                       FontSize="15" Margin="30,0,0,0"
                                       FontWeight="Bold"
                                       Width="60"
                                       Foreground="{Binding Path=InputStatus , Converter={StaticResource EnumToColorConverter}, Mode=TwoWay}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="path" Property="Fill" Value="{StaticResource InRbOver}"/>
                                <Setter TargetName="tb" Property="Foreground" Value="{StaticResource InRbOver}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="OutputRB" TargetType="{x:Type RadioButton}">
            <Setter Property="Width" Value="100"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid>
                            <Path x:Name="path" Style="{StaticResource OutArrow}"/>
                            <TextBlock x:Name="tb" Text="Output" HorizontalAlignment="Left"
                                       FontSize="15" Margin="29,3,0,0"
                                       FontWeight="Bold"
                                       Width="60"
                                       Foreground="{Binding Path=OutputStatus , Converter={StaticResource EnumToColorConverter}, Mode=TwoWay}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="path" Property="Fill" Value="{StaticResource OutRbOver}"/>
                                <Setter TargetName="tb" Property="Foreground" Value="{StaticResource OutRbOver}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ShowDirection" TargetType="{x:Type Control}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Control}">
                        <Path Data="M7.03 9.97H11.03V18.89L13.04 18.92V9.97H17.03L12.03 4.97Z"
                              x:Name="Direction" Fill="Black">
                            <Path.RenderTransform>
                                <TranslateTransform x:Name="DirectionTransform" X="0" Y="0"/>
                            </Path.RenderTransform>
                        </Path>

                        <ControlTemplate.Resources>
                            <Storyboard x:Key="SlideIn">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DirectionTransform"
                                                               Storyboard.TargetProperty="Y">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0:0" Value="-0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0:3" Value="60"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="SlideOut">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DirectionTransform"
                                                               Storyboard.TargetProperty="Y">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0:0" Value="60"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0:3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid>
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="Loaded">
                <i:InvokeCommandAction Command="{Binding WindowLoadedCommand}"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>


        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <DockPanel>
                <Menu DockPanel.Dock="Top" Margin="0" Background="#D5D5D5">
                    <MenuItem Header="Settings" FontWeight="Bold" Height="25" Width="60" Margin="1">
                        <MenuItem 
                            Header="SerialPorts"
                            Command="{Binding OpenWindowCommand}"
                            CommandParameter="Views/SerialSetWindow.xaml"/>
                    </MenuItem>
                </Menu>
            </DockPanel>
        </Grid>

        <Grid Grid.Row="1" Margin="20">
            <Grid.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Margin" Value="3"/>
                    <Setter Property="FontSize" Value="20"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Style>

                <Style TargetType="TextBox">
                    <Setter Property="Margin" Value="20"/>
                    <Setter Property="Width" Value="80"/>
                    <Setter Property="Height" Value="30"/>
                    <Setter Property="TextAlignment" Value="Center"/>
                    <Setter Property="FontSize" Value="16"/>
                </Style>

                <Style TargetType="Button">
                    <Setter Property="Margin" Value="20"/>
                    <Setter Property="Width" Value="100"/>
                    <Setter Property="Height" Value="30"/>
                    <Setter Property="BorderThickness" Value="2"/>
                    <Style.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="14"/>
                        </Style>
                    </Style.Resources>
                </Style>

                <Style TargetType="Slider">
                    <Setter Property="Margin" Value="0,26,0,26"/>
                </Style>
            </Grid.Resources>


            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="6*"/>
                    <RowDefinition Height="200"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0" Margin="0,20,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0" HorizontalAlignment="Right">
                        <StackPanel>
                            <Button Content="Move" Command="{Binding MoveCommand}" CommandParameter="A"/>
                            <Button Content="Down" Command="{Binding MoveCommand}" CommandParameter="P"/>
                            <Button Content="Up" Command="{Binding MoveCommand}" CommandParameter="D"/>
                            <Button Content="Speed" Command="{Binding SetSpeedCommand }"/>
                        </StackPanel>
                    </Grid>
                    <Grid Grid.Column="1">
                        <StackPanel>
                            <Slider Value="{Binding MovePara, Mode=TwoWay}" Maximum="6000"/>
                            <Slider Value="{Binding DownPara, Mode=TwoWay}" Maximum="{Binding LowerMargin}"/>
                            <Slider Value="{Binding UpPara, Mode=TwoWay}" Maximum="{Binding UpperMargin}"/>
                            <Slider Value="{Binding SpeedPara, Mode=TwoWay}" Maximum="40"/>
                        </StackPanel>
                    </Grid>
                    <Grid Grid.Column="2" HorizontalAlignment="Left">
                        <StackPanel>
                            <TextBox Text="{Binding MovePara, StringFormat={}{0:}}" IsReadOnly="True"/>
                            <TextBox Text="{Binding DownPara, StringFormat={}{0:}}" IsReadOnly="True"/>
                            <TextBox Text="{Binding UpPara, StringFormat={}{0:}}" IsReadOnly="True"/>
                            <TextBox Text="{Binding SpeedPara, StringFormat={}{0:}}" IsReadOnly="True"/>
                        </StackPanel>
                    </Grid>
                </Grid>

                <Grid Grid.Row="1">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>

                    <Grid.Resources>
                        <Style TargetType="Label">
                            <Setter Property="FontSize" Value="15"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Style>
                    </Grid.Resources>

                    <Grid HorizontalAlignment="Right">
                        <Label Content="2" HorizontalAlignment="Center"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Label Content="1" VerticalAlignment="Center"/>

                            <Grid>
                                <Ellipse Width="140" Height="140" 
                                     Stroke="Black" StrokeThickness="2" Fill="Transparent"/>

                                <CheckBox Style="{StaticResource verticalCb}"
                                      VerticalAlignment="Top"
                                      Command="{Binding Pump2CheckedCommand}"
                                      CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                      IsChecked="{Binding Pump2IsChecked, Mode=TwoWay}"/>

                                <CheckBox Style="{StaticResource verticalCb}"
                                      VerticalAlignment="Bottom"
                                      Command="{Binding PumpCCheckedCommand}"
                                      CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                      IsChecked="{Binding PumpCIsChecked, Mode=TwoWay}"/>

                                <CheckBox Style="{StaticResource HorizontalCb}"
                                      HorizontalAlignment="Left"
                                      Command="{Binding Pump1CheckedCommand}"
                                      CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                      IsChecked="{Binding Pump1IsChecked, Mode=TwoWay}"/>

                                <CheckBox Style="{StaticResource HorizontalCb}"
                                      HorizontalAlignment="Right"
                                      Command="{Binding Pump3CheckedCommand}"
                                      CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                      IsChecked="{Binding Pump3IsChecked, Mode=TwoWay}"/>

                                <Path Style="{StaticResource Cross}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center" Height="33" Stretch="Fill" Width="33"/>

                                <Grid.Triggers>
                                    <EventTrigger RoutedEvent="MouseEnter">
                                        <!--여기까지했슴-->
                                    </EventTrigger>
                                </Grid.Triggers>
                            </Grid>
                            <Label Content="3" VerticalAlignment="Center"/>
                        </StackPanel>
                        <Label Content="C" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
                    </Grid>

                    <Grid Grid.Column="1" VerticalAlignment="Bottom">
                        <StackPanel>
                            <RadioButton Style="{StaticResource InputRB}" Margin="5"
                                         Command="{Binding InputBtnCommand}"
                                         CommandParameter="in"/>
                            <RadioButton Style="{StaticResource OutputRB}" Margin="5"
                                         Command="{Binding OutputBtnCommand}"
                                         CommandParameter="out"/>
                        </StackPanel>
                    </Grid>

                </Grid>

                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="7*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <TextBlock Text="Input String" HorizontalAlignment="Right"/>
                    </Grid>
                    <Grid Grid.Column="1">
                        <TextBox 
                            Height="30" Width="350" Margin="0,0,0,0"
                            Text="{Binding InputString, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <TextBox.InputBindings>
                                <KeyBinding Key="Enter" Command="{Binding KeyDownCommand}"/>
                            </TextBox.InputBindings>
                        </TextBox>
                    </Grid>
                </Grid>
            </Grid>

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="10*"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="1" VerticalAlignment="Bottom" Margin="0">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Serial Log" HorizontalAlignment="Left" Margin="70,0,0,5"/>
                        <Button Content="Reconnect" Margin="30,0,0,0"
                                Command="{Binding ReconnectCommand}"/>
                        <CheckBox Content="Connected" Margin="20 10 0 0" IsEnabled="False"
                                  IsChecked="{Binding IsConnected}"/>
                    </StackPanel>
                </Grid>
                <Grid Grid.Row="2" Margin="0">
                    <TextBox
                        VerticalScrollBarVisibility="Auto"
                        Height="500"
                        Width="400"
                        Margin="0,0,0,0"
                        Text="{Binding TextBoxContext}"
                        TextAlignment="Justify">

                        <b:Interaction.Behaviors>
                            <behaviors:ScrollBehavior/>
                        </b:Interaction.Behaviors>

                    </TextBox>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>
